{"version":3,"sources":["reportWebVitals.ts","../../dist/Button/Button.js","../../dist/Input/Input.js","components/App.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","catch","console","error","Button","onClick","backgroundColor","children","_jsx","Object","assign","style","Input","value","onChange","App","useState","setValue","displayValue","setDisplayValue","event","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wIAceA,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,MACPQ,MAAMC,QAAQC,Q,cCRNC,EADA,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAiBC,EAA7B,EAA6BA,SAA7B,OAA8CC,cAAK,SAAUC,OAAOC,OAAO,CAAEL,QAASA,EAASM,MAAO,CAAEL,oBAAqB,CAAEC,SAAUA,SAAa,ICCtJK,EADD,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OAA2BN,cAAK,QAAS,CAAEK,MAAOA,EAAOC,SAAUA,QAAY,ICgC9EC,EA7BH,WACV,MAA0BC,mBAAS,IAAnC,mBAAOH,EAAP,KAAcI,EAAd,KACA,EAAwCD,mBAAS,IAAjD,mBAAOE,EAAP,KAAqBC,EAArB,KAWA,OACE,qCACE,sCAEA,cAAC,EAAD,CAAOL,SAbM,SAACM,GAChBH,EAASG,EAAMC,OAAOR,QAYOA,MAAOA,IAClC,cAAC,EAAD,CAAQR,QAVI,WACdc,EAAgBN,GAChBI,EAAS,KAQP,kBAAuC,uBAErCC,GACA,oDACc,iCAAUA,WCrBhCI,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1BlC,M","file":"static/js/main.6584193e.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    }).catch(console.error)\n  }\n}\n\nexport default reportWebVitals\n","import { jsx as _jsx } from \"react/jsx-runtime\";\nconst Button = ({ onClick, backgroundColor, children, }) => (_jsx(\"button\", Object.assign({ onClick: onClick, style: { backgroundColor } }, { children: children }), void 0));\nexport default Button;\n","import { jsx as _jsx } from \"react/jsx-runtime\";\nconst Input = ({ value, onChange, }) => (_jsx(\"input\", { value: value, onChange: onChange }, void 0));\nexport default Input;\n","import { useState } from 'react'\n\nimport { Input, Button } from 'library'\n\nconst App = () => {\n  const [value, setValue] = useState('')\n  const [displayValue, setDisplayValue] = useState('')\n\n  const onChange = (event: any) => {\n    setValue(event.target.value)\n  }\n\n  const onClick = () => {\n    setDisplayValue(value)\n    setValue('')\n  }\n\n  return (\n    <>\n      <h1>Demo</h1>\n\n      <Input onChange={onChange} value={value} />\n      <Button onClick={onClick}>GO !</Button><br />\n\n      { displayValue && (\n        <>\n          You typed : <strong>{ displayValue }</strong>\n        </>\n      ) }\n    </>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport reportWebVitals from './reportWebVitals'\nimport App from './components/App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\nreportWebVitals()\n"],"sourceRoot":""}